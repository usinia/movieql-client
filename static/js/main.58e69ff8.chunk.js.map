{"version":3,"sources":["apolloClient.js","queries.js","Movie.js","Home.js","Detail.js","App.js","globalStyles.js","index.js"],"names":["client","ApolloClient","uri","HOME_PAGE","gql","MOVIE_DETAILS","Card","styled","div","props","background","Title","span","Movie","id","title","rating","poster","to","Container","Home","useQuery","data","loading","error","Helmet","movies","map","movie","key","medium_cover_image","Image","withComponent","h1","Paragraph","bold","MovieContainer","Detail","movieId","match","params","variables","Fragment","src","description_intro","suggestions","App","exact","path","component","Component","createGlobalStyle","reset","ReactDOM","render","document","getElementById"],"mappings":"+QAOeA,EALA,I,MAAIC,GAAa,CAE9BC,IAAK,4B,onBCFA,IAAMC,EAAYC,IAAH,KAYTC,EAAgBD,IAAH,K,koBCT1B,IAAME,EAAOC,UAAOC,IAAV,KAGY,SAAAC,GAAK,oBAAWA,EAAMC,WAAjB,QASrBC,EAAQJ,UAAOK,KAAV,KA4BIC,EAhBD,SAAC,GAAD,IAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,MAAOC,EAAd,EAAcA,OAAQC,EAAtB,EAAsBA,OAAtB,OACZ,kBAAC,IAAD,CAAMC,GAAE,mBAAcJ,IACpB,kBAACR,EAAD,CAAMI,WAAYO,GAChB,kBAACN,EAAD,KACGI,EADH,MACaC,EADb,mB,2LCxBN,IAAMG,EAAYZ,UAAOC,IAAV,KAwDAY,EAzBF,WAAO,IAAD,EACgBC,YAASlB,GAAlCmB,EADS,EACTA,KAAMC,EADG,EACHA,QAASC,EADN,EACMA,MACvB,OACE,kBAACL,EAAD,KACE,kBAACM,EAAA,OAAD,KACE,kDAEDF,GAAW,UACXC,GAAS,sBACRD,GACAD,GACAA,EAAKI,QACLJ,EAAKI,OAAOC,KAAI,SAAAC,GAAK,OACnB,kBAAC,EAAD,CACEC,IAAKD,EAAMd,GACXA,GAAIc,EAAMd,GACVG,OAAQW,EAAME,mBACdf,MAAOa,EAAMb,MACbC,OAAQY,EAAMZ,c,+xBCjD1B,IAAMG,EAAYZ,UAAOC,IAAV,KAYTuB,EANOxB,UAAOC,IAAV,KAMSwB,cAAc,OAE3BrB,EAAQJ,UAAO0B,GAAV,KAKLC,EAAY3B,UAAOK,KAAV,KAGE,SAAAH,GAAK,OAAKA,EAAM0B,KAAO,MAAQ,SAG1CC,EAAiB7B,UAAOC,IAAV,KA+EL6B,EAtDA,SAAC,GAAwC,IAAnBC,EAAkB,EAArCC,MAASC,OAAUF,QAAkB,EACpBjB,YAAShB,EAAe,CACvDoC,UAAW,CAAEH,aADPf,EAD6C,EAC7CA,QAASC,EADoC,EACpCA,MAAOF,EAD6B,EAC7BA,KAIxB,OAAIC,EAEA,kBAAC,IAAMmB,SAAP,KACE,kBAACjB,EAAA,OAAD,KACE,qDAFJ,WAQAD,EAAc,QAGhB,kBAAC,IAAMkB,SAAP,KACE,kBAAC,EAAD,KACE,kBAACjB,EAAA,OAAD,KACE,+BACGH,EAAKM,MAAMb,MADd,eAIF,kBAACgB,EAAD,CAAOY,IAAKrB,EAAKM,MAAME,qBACvB,8BACE,kBAAC,EAAD,KACGR,EAAKM,MAAMb,OAEd,kBAACmB,EAAD,CAAWC,MAAI,GAAf,WACWb,EAAKM,MAAMZ,QAEtB,kBAACkB,EAAD,KACGZ,EAAKM,MAAMgB,qBAIlB,kBAAC,EAAD,kBACA,kBAACR,EAAD,KACGd,EAAKuB,YAAYlB,KAAI,SAAAC,GAAK,OACzB,kBAAC,EAAD,CACEC,IAAKD,EAAMd,GACXA,GAAIc,EAAMd,GACVC,MAAOa,EAAMb,MACbC,OAAQY,EAAMZ,OACdC,OAAQW,EAAME,2BC/EXgB,E,iLAfX,OACE,kBAAC,IAAD,CAAgB9C,OAAQA,GACtB,kBAAC,IAAD,CAAqBA,OAAQA,GAC3B,kBAAC,IAAD,KACE,8BACE,kBAAC,IAAD,CAAO+C,OAAO,EAAMC,KAAM,IAAKC,UAAW7B,IAC1C,kBAAC,IAAD,CAAO4B,KAAM,oBAAqBC,UAAWZ,Y,GARzCa,a,gXCNlBC,4BAAiB,IAEbC,KCCJC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.58e69ff8.chunk.js","sourcesContent":["import ApolloClient from \"apollo-boost\";\n\nconst client = new ApolloClient({\n  // uri: \"http://localhost:4000/\"\n  uri: \"https://movieql.now.sh/\"\n});\n\nexport default client;\n","import gql from \"graphql-tag\";\n\nexport const HOME_PAGE = gql`\n  {\n    movies(limit: 50, rating: 7) {\n      id\n      title\n      rating\n      medium_cover_image\n      genres\n    }\n  }\n`;\n\nexport const MOVIE_DETAILS = gql`\n  query getMovieDetail($movieId: Int!) {\n    movie(id: $movieId) {\n      title\n      rating\n      description_intro\n      language\n      medium_cover_image\n      genres\n    }\n    suggestions(id: $movieId) {\n      id\n      title\n      rating\n      description_intro\n      medium_cover_image\n    }\n  }\n`;\n// line 16: query getMovieDetail() => for apollo\n// line 17: movie() => for graphql server\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nconst Card = styled.div`\n  border-radius: 15px;\n  box-shadow: 0 10px 20px rgba(0, 0, 0, 0.19), 0 6px 6px rgba(0, 0, 0, 0.23);\n  background-image: ${props => `url(${props.background})`};\n  background-size: cover;\n  background-position: center center;\n  height: 300px;\n  width: 200px;\n  margin-bottom: 40px;\n  position: relative;\n`;\n\nconst Title = styled.span`\n  background-color: white;\n  width: auto;\n  padding: 10px;\n  box-shadow: 0 10px 20px rgba(0, 0, 0, 0.19), 0 6px 6px rgba(0, 0, 0, 0.23);\n  position: absolute;\n  bottom: 25px;\n  left: 0;\n  right: 0;\n  margin: auto;\n`;\n\nconst Movie = ({ id, title, rating, poster }) =>\n  <Link to={`/details/${id}`}>\n    <Card background={poster}>\n      <Title>\n        {title} / {rating}⭐️\n      </Title>\n    </Card>\n  </Link>;\n\nMovie.propTypes = {\n  id: PropTypes.number.isRequired,\n  title: PropTypes.string.isRequired,\n  rating: PropTypes.number.isRequired,\n  poster: PropTypes.string.isRequired\n};\n\nexport default Movie;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { Helmet } from \"react-helmet\";\n// import { Query } from \"react-apollo\";\nimport { HOME_PAGE } from \"./queries\";\nimport Movie from \"./Movie\";\nimport { useQuery } from \"react-apollo-hooks\";\n\nconst Container = styled.div`\n  display: grid;\n  grid-template-columns: repeat(3, 0.7fr);\n  flex-wrap: wrap;\n  justify-items: center;\n`;\n\n/*\nconst Home = () => {\n  return (\n    <Container>\n      <Query query={HOME_PAGE}>\n        {({ loading, data, error }) => {\n          if (loading) return \"loading\";\n          if (error) return \"something happen...\";\n          return data.movies.map(movie =>\n            <Movie\n              id={movie.id}\n              key={movie.id}\n              poster={movie.medium_cover_image}\n              title={movie.title}\n              rating={movie.rating}\n            />\n          );\n        }}\n      </Query>\n    </Container>\n  );\n};\n*/\n\nconst Home = () => {\n  const { data, loading, error } = useQuery(HOME_PAGE);\n  return (\n    <Container>\n      <Helmet>\n        <title>Home | MovieQL</title>\n      </Helmet>\n      {loading && \"Loading\"}\n      {error && \"Something is wrong\"}\n      {!loading &&\n        data &&\n        data.movies &&\n        data.movies.map(movie =>\n          <Movie\n            key={movie.id}\n            id={movie.id}\n            poster={movie.medium_cover_image}\n            title={movie.title}\n            rating={movie.rating}\n          />\n        )}\n    </Container>\n  );\n};\n\nexport default Home;\n","import React from \"react\";\n// import { Query } from \"react-apollo\";\nimport { MOVIE_DETAILS } from \"./queries\";\nimport { Helmet } from \"react-helmet\";\nimport Movie from \"./Movie\";\nimport styled from \"styled-components\";\nimport { useQuery } from \"react-apollo-hooks\";\n\nconst Container = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 4fr;\n  margin-bottom: 50px;\n`;\n\nconst Card = styled.div`\n  box-shadow: 0 10px 20px rgba(0, 0, 0, 0.19), 0 6px 6px rgba(0, 0, 0, 0.23);\n  background-color: white;\n  border-radius: 7px;\n`;\n\nconst Image = Card.withComponent(\"img\");\n\nconst Title = styled.h1`\n  font-size: 24px;\n  margin-bottom: 10px;\n`;\n\nconst Paragraph = styled.span`\n  margin-bottom: 10px;\n  display: block;\n  font-weight: ${props => (props.bold ? \"500\" : \"400\")};\n`;\n\nconst MovieContainer = styled.div`\n  display: grid;\n  grid-template-columns: repeat(3, 0.7fr);\n  flex-wrap: wrap;\n  justify-items: center;\n  margin-top: 50px;\n`;\n\n/*\n-const Detail = ({ match: { params: { movieId } } }) =>\n-  <Query query={MOVIE_DETAILS} variables={{ movieId }}>\n-    {({ loading, data, error }) => {\n-      if (loading) return \"loading\";\n-      if (error) return \"error\";\n-      return (\n-        <React.Fragment>\n-          {data.movie.title}\n-          {data.movie.medium_cover_image}\n-          {data.movie.rating}\n-          {data.movie.description_intro}\n-        </React.Fragment>\n-      );\n-    }}\n-  </Query>;\n*/\nconst Detail = ({ match: { params: { movieId } } }) => {\n  const { loading, error, data } = useQuery(MOVIE_DETAILS, {\n    variables: { movieId }\n  });\n\n  if (loading)\n    return (\n      <React.Fragment>\n        <Helmet>\n          <title>Loading | MovieQL</title>\n        </Helmet>\n        loading\n      </React.Fragment>\n    );\n\n  if (error) return \"error\";\n\n  return (\n    <React.Fragment>\n      <Container>\n        <Helmet>\n          <title>\n            {data.movie.title} | MovieQL\n          </title>\n        </Helmet>\n        <Image src={data.movie.medium_cover_image} />\n        <span>\n          <Title>\n            {data.movie.title}\n          </Title>\n          <Paragraph bold>\n            Rating: {data.movie.rating}\n          </Paragraph>\n          <Paragraph>\n            {data.movie.description_intro}\n          </Paragraph>\n        </span>\n      </Container>\n      <Title>Suggested</Title>\n      <MovieContainer>\n        {data.suggestions.map(movie =>\n          <Movie\n            key={movie.id}\n            id={movie.id}\n            title={movie.title}\n            rating={movie.rating}\n            poster={movie.medium_cover_image}\n          />\n        )}\n      </MovieContainer>\n    </React.Fragment>\n  );\n};\n\nexport default Detail;\n","import React, { Component } from \"react\";\nimport { HashRouter as Router, Route } from \"react-router-dom\";\nimport { ApolloProvider } from \"react-apollo\";\nimport { ApolloProvider as ApolloHooksProvider } from \"react-apollo-hooks\";\nimport client from \"./apolloClient\";\nimport Home from \"./Home\";\nimport Detail from \"./Detail\";\n\nclass App extends Component {\n  render() {\n    return (\n      <ApolloProvider client={client}>\n        <ApolloHooksProvider client={client}>\n          <Router>\n            <main>\n              <Route exact={true} path={\"/\"} component={Home} />\n              <Route path={\"/details/:movieId\"} component={Detail} />\n            </main>\n          </Router>\n        </ApolloHooksProvider>\n      </ApolloProvider>\n    );\n  }\n}\n\nexport default App;\n","import { createGlobalStyle } from \"styled-components\";\nimport reset from \"styled-reset\";\ncreateGlobalStyle`\n  @import url('https://fonts.googleapis.com/css?family=Maven+Pro:400,500');\n  ${reset};\n  body{\n    font-family: 'Maven Pro', sans-serif;\n    background-color: #ecf0f1;\n  }\n  a{\n      color:inherit;\n  }\n  main {\n    width: 80%;\n    margin: 0 auto;\n    padding: 20px;\n  }\n`;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./globalStyles\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}